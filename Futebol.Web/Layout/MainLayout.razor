@using Futebol.Web.Components
@using Futebol.Web.Components.Account
@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase

<MudThemeProvider @ref="_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar Elevation="1">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
                <MudText Typo="Typo.h5">Futebol</MudText>
                <MudSpacer />
                <MudSwitch ThumbIcon="@(_isDarkMode == true ? Icons.Material.Filled.LightMode :  Icons.Material.Filled.DarkMode)" ThumbIconColor="@(_isDarkMode == true ? Color.Warning : Color.Primary)" Size="Size.Large" @bind-Value="@_isDarkMode" T="bool" />
                <MudLink Href="/logout">Sair</MudLink>
            </MudAppBar>
            <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
                <NavMenu />
            </MudDrawer>
            <MudMainContent>
                <MudContainer Class="mt-4" MaxWidth="MaxWidth.ExtraLarge">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <LoginRedirect/>
    </NotAuthorized>
</AuthorizeView>

@code {
    bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudThemeProvider _mudThemeProvider = null!;

    void DrawerToggle() => _drawerOpen = !_drawerOpen;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }

}